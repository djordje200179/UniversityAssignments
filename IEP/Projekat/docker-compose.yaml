version: "3.7"

volumes:
    auth_db_volume:
    store_db_volume:
    
networks:
    auth_net:
    store_net:
    common_net:
    blockchain_net:
    spark_net:
    
services:
    auth_db:
        image: mysql
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: users
        volumes:
            - auth_db_volume:/var/lib/mysql
        networks:
            - auth_net
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-uroot", "-proot"]
            interval: 3s
            timeout: 3s
            retries: 10
    auth_adminer:
        image: adminer
        ports:
            - "8081:8080"
        networks:
            - auth_net
        depends_on:
            auth_db:
                condition: service_healthy
    auth_app:
        build: ./authentication
        ports:
            - "8082:5000"
        environment:
            DB_USERNAME: root
            DB_PASSWORD: root
            DB_HOST: auth_db
            DELETED_USERS_DB_HOST: deleted_users_db
            JWT_KEY: iep-projekat
        networks:
            - auth_net
            - common_net
        depends_on:
            auth_db:
                condition: service_healthy
            deleted_users_db:
                condition: service_healthy
    
    deleted_users_db:
        image: redis
        networks:
            - common_net
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            interval: 3s
            timeout: 3s
            retries: 10
    
    store_db:
        image: mysql
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: store
        volumes:
            - store_db_volume:/var/lib/mysql
        networks:
            - store_net
            - spark_net
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-uroot", "-proot" ]
            interval: 3s
            timeout: 3s
            retries: 10
    store_adminer:
        image: adminer
        ports:
            - "8083:8080"
        networks:
            - store_net
        depends_on:
            store_db:
                condition: service_healthy
    store_courier_app:
        build:
            context: ./store
            args:
                START_FILE: courier_app.py
        ports:
            - "8084:5000"
        environment:
            DB_USERNAME: root
            DB_PASSWORD: root
            DB_HOST: store_db
            DELETED_USERS_DB_HOST: deleted_users_db
            BLOCKCHAIN_HOST: blockchain_simulator
            JWT_KEY: iep-projekat
        networks:
            - store_net
            - common_net
            - blockchain_net
        depends_on:
            store_db:
                condition: service_healthy
            deleted_users_db:
                condition: service_healthy
    store_customer_app:
        build:
            context: ./store
            args:
                START_FILE: customer_app.py
        ports:
            - "8085:5000"
        environment:
            DB_USERNAME: root
            DB_PASSWORD: root
            DB_HOST: store_db
            DELETED_USERS_DB_HOST: deleted_users_db
            BLOCKCHAIN_HOST: blockchain_simulator
            JWT_KEY: iep-projekat
        networks:
            - store_net
            - common_net
            - blockchain_net
        depends_on:
            store_db:
                condition: service_healthy
            deleted_users_db:
                condition: service_healthy
    store_owner_app:
        build:
            context: ./store
            args:
                START_FILE: owner_app.py
        ports:
            - "8086:5000"
        environment:
            DB_USERNAME: root
            DB_PASSWORD: root
            DB_HOST: store_db
            DELETED_USERS_DB_HOST: deleted_users_db
            BLOCKCHAIN_HOST: blockchain_simulator
            JWT_KEY: iep-projekat
            STATISTICS_HOST: store_statistics_app
        networks:
            - store_net
            - common_net
            - blockchain_net
            - spark_net
        depends_on:
            store_db:
                condition: service_healthy
            deleted_users_db:
                condition: service_healthy
                
    store_statistics_app:
        build:
            context: ./statistics
        environment:
            DB_HOST: store_db
            DB_USERNAME: root
            DB_PASSWORD: root
            SPARK_HOST: spark-master
        networks:
            - spark_net
    
    spark-master:
        image: bde2020/spark-master:3.3.0-hadoop3.3
        container_name: spark-master
        ports:
            - "8087:8080"
        networks:
            - spark_net
        environment:
            INIT_DAEMON_STEP: setup_spark
    store_statistics_worker_1:
        image: bde2020/spark-worker:3.3.0-hadoop3.3
        depends_on:
            - spark-master
        networks:
            - spark_net
        environment:
            SPARK_MASTER: spark://spark-master:7077
#    store_statistics_worker_2:
#        image: bde2020/spark-worker:3.3.0-hadoop3.3
#        depends_on:
#            - spark-master
#        networks:
#            - spark_net
#        environment:
#            SPARK_MASTER: spark://spark-master:7077

    blockchain_simulator:
        image: trufflesuite/ganache-cli
        ports:
            - "8545:8545"
        networks:
            - blockchain_net
    blockchain_viewer:
        build:
            context: ./blockchain/etherwallet
        ports:
            - "8088:80"
        networks:
            - blockchain_net
        depends_on:
            - blockchain_simulator